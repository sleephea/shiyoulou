 CREATE TABLE Stu_Union
 (
 SID CHAR(30) NOT NULL UNIQUE,
 SNAME CHAR(30),
 SSEX CHAR(10),
 SAGE SMALLINT,
 SDEPT CHAR(20),
 CONSTRAINT PK PRIMARY KEY(SID)
 );
 INSERT Stu_Union
 VALUES('202058501238','ZHAO','女',20,'CS');

 UPDATE Stu_Union
 SET SID='202058501237'
 WHERE SDEPT='CS';
 UPDATE Stu_Union
 SET SID='202058501239'
 WHERE SNAME='ZHAO';
 SELECT *
 FROM Stu_Union;

 INSERT Stu_Union
 VALUES ('202058501239','ZHAO','女',20,'CS');

 INSERT Stu_Union(SNAME,SSEX,SAGE,SDEPT)
 VALUES ('ZHAO','女',20,'CS');

 UPDATE Stu_Union
 SET SID=NULL
 WHERE SID='202058501239';

 SET XACT_ABORT ON
 BEGIN TRANSACTION T1;
 INSERT INTO Stu_Union
 VALUES('95009','李勇','男',25,'EE');
 INSERT INTO Stu_Union
 VALUES('95003','王浩','男',25,'EE');
 INSERT INTO Stu_Union
 VALUES('95005','王浩','男',25,'EE');
 SELECT *
 FROM Stu_Union;
 COMMIT TRANSACTION T1;

 SET XACT_ABORT ON
 BEGIN TRANSACTION T2;
 INSERT INTO Stu_Union
 VALUES('95007','李明','男',25,'EE');
 INSERT INTO Stu_Union
 VALUES('95009','李进','女',22,'CS');
 COMMIT TRANSACTION T2;

 SELECT *
 FROM Stu_Union;

 CREATE TABLE SCHOLARSHIP
 (
 LID CHAR(30),
 CID CHAR(30),
 MONEY INT
 );
 INSERT INTO SCHOLARSHIP
 VALUES('0001','700000',5000);
 INSERT INTO SCHOLARSHIP
 VALUES('0001','800000',8000);
 SELECT *
 FROM SCHOLARSHIP;

 ALTER TABLE SCHOLARSHIP
 ADD CONSTRAINT PK PRIMARY KEY(LID);

 ALTER TABLE SCHOLARSHIP
 ADD CONSTRAINT FK FOREIGN KEY(CID) REFERENCES STUDENTS(SID);








 CREATE TABLE COURSE
 (
 CNO CHAR(30) NOT NULL UNIQUE,
 CNAME CHAR(30)NOT NULL,
 CPOINTS INT,
 CONSTRAINT PK PRIMARY KEY(CNO)
 );

 INSERT INTO Stu_Union
 VALUES('10001','李勇','男',24,'EE');

 INSERT INTO COURSES
 VALUES('0001','COMPUTERNETWORKS',2);
 INSERT INTO COURSES
 VALUES('0002','DATABASE',3);
 SELECT *
 FROM Stu_Union;
 SELECT *
 FROM COURSES;

 CREATE TABLE SC
 (
 SID CHAR(30),
 CID CHAR(30),
 GRADE INT,
 FOREIGN KEY (SID) REFERENCES Stu_Union(SID) ON DELETE CASCADE,
 FOREIGN KEY (CID) REFERENCES COURSES(CID) ON DELETE CASCADE,
 CONSTRAINT PK_SC PRIMARY KEY (SID,CID)
 );

 INSERT INTO SC
 VALUES('202058501239','0001',2);
 INSERT INTO SC
 VALUES('202058501239','0002',2);
 INSERT INTO SC
 VALUES('10001','0001',2);
 INSERT INTO SC
 VALUES('10001','0002',2);

 SELECT *
 FROM SC;

 INSERT INTO SC
 VALUES('99','101',2);

 DELETE FROM Stu_Union
 WHERE SID='10001';
 SELECT *
 FROM SC;

 DELETE 
 FROM COURSES
 WHERE CID='0002';
 SELECT *
 FROM SC;
 select *
 from STUDENTS;

 CREATE TABLE STU_CARD
 (
 CARDID CHAR(14),
 STUID CHAR (30),
 REMAINEDMONEY DECIMAL(10,2),
 FOREIGN KEY(STUID) REFERENCES students(SID) ON DELETE CASCADE,
 CONSTRAINT PK_ST PRIMARY KEY(CARDID)
 );
 INSERT INTO STU_CARD
 VALUES('05212567','850955252',100.25);
 INSERT INTO STU_CARD
 VALUES('05212222','883794999',200.50);
 SELECT *
 FROM STU_CARD;

 CREATE TABLE ICBCCARD
 (
 BANKID CHAR(20),
 STUCARDID CHAR (14),
 RESTOREDMONEY DECIMAL(10,2),
 FOREIGN KEY(STUCARDID) REFERENCES STU_CARD(CARDID) ON DELETE CASCADE,
 CONSTRAINT PK_SI PRIMARY KEY(BANKID)
 );

 INSERT INTO ICBCCARD
 VALUES('9558844022312','05212567',15000.1);
 INSERT INTO ICBCCARD
 VALUES('9558844023645','05212222',50000.3);
 SELECT *
 FROM ICBCCARD;

 alter table choices
 drop [FK__CHOICES__SID__11558062];
 alter table choices
 add constraint[FK_CHOICES_STUDENTS]foreign key([sid])references[dbo].[students]([sid])on delete cascade;

 delete 
 from students
 where SID='850955252';
 select *
 from STU_CARD;
 select *
 from ICBCCARD;

 ALTER TABLE ICBCCARD
 DROP [FK__ICBCCARD__STUCAR__55FFB06A];
 ALTER TABLE ICBCCARD
 ADD CONSTRAINT[FK_ICBCCARD_STUCARD]FOREIGN KEY (STUCARDID) REFERENCES STU_CARD(CARDID) ON DELETE NO ACTION;
 SET XACT_ABORT ON
 BEGIN TRANSACTION DEL
 DELETE FROM STUDENTS WHERE SID='883794999';
 SELECT * FROM STU_CARD;
 SELECT * FROM ICBCCARD;
 COMMIT TRANSACTION DEL;

 SELECT * FROM STU_CARD;
 SELECT * FROM ICBCCARD;

 CREATE TABLE LISTENCOURSE
 (
 TID CHAR(6),
 TNAME CHAR(20),
 CID CHAR(4),
 CONSTRAINT PK_LISTEN_COURSE PRIMARY KEY(TID),
 );
 CREATE TABLE TEACHCOURSE
 (
 TID CHAR(6),
 CNAME CHAR(20),
 CID CHAR(4),
 CONSTRAINT PK_TEACH_COURSE PRIMARY KEY(CID),
 CONSTRAINT FK_TEACH_COURSE FOREIGN KEY(TID)REFERENCES LISTENCOURSE(TID)
 );
 ALTER TABLE LISTENCOURSE
 ADD CONSTRAINT FK_LISTEN_COURSE FOREIGN KEY(CID)REFERENCES TEACHCOURSE(CID);














 CREATE TABLE WORKER
 (
 NUMBER CHAR(5),
 NAME CHAR(8) CONSTRAINT U1 UNIQUE,
 SEX CHAR(5),
 SAGE SMALLINT CONSTRAINT  U2 CHECK (SAGE<=28),
 DEAPARTMENT CHAR(20),
 CONSTRAINT PK_W PRIMARY KEY(NUMBER)
 );


 INSERT 
 INTO WORKER 
 VALUES('00001','李勇','男',22,'科技部');
 SELECT *
 FROM WORKER;

 INSERT
 INTO WORKER
 VALUES('00002','张明','男',29,'文化部');

 ALTER TABLE WORKER
 DROP U2;

 INSERT
 INTO WORKER
 VALUES('00002','张明','男',29,'文化部');
 SELECT *
 FROM WORKER;

 GO 
 CREATE RULE RULE_SEX
 AS @VALUE IN('F','M');
 GO
 EXEC sp_bindrule RULE_SEX,'WORKER.[SEX]';

 INSERT 
 INTO WORKER
 VALUES('00003','王浩','1',25,'研发部'); 

 EXEC sp_unbindrule 'WORKER.[SEX]';

 UPDATE ICBCCARD
 SET RESTOREDMONEY=RESTOREDMONEY-100
 WHERE STUCARDID='05212222';

 UPDATE STU_CARD
 SET REMAINEDMONEY=REMAINEDMONEY+100
 WHERE CARDID='05212222';

 BEGIN TRAN
 UPDATE ICBCCARD
 SET RESTOREDMONEY=RESTOREDMONEY-100
 WHERE STUCARDID='05212222';

 UPDATE STU_CARD
 SET REMAINEDMONEY=REMAINEDMONEY+100
 WHERE CARDID='05212222';
 COMMIT TRAN;

 SELECT *
 FROM ICBCCARD;
 SELECT *
 FROM STU_CARD;

 UPDATE COURSES
 SET HOUR=96
 WHERE CID='10001'
 INSERT TEACHERS
 VALUES('1234567890','MY','MY@ZSU.EDU.CN',3000)
 SELECT TOP 10 *
 FROM TEACHERS(HOLDLOCK)
 GO;
 SELECT *
 FROM COURSES;
 SELECT *
 FROM TEACHERS;

 SELECT 'BEFORE TRANSACTION:'AS HINT,@@TRANCOUNT AS TRANACTIONCOUNT
 BEGIN TRAN
 SELECT 'THE FIRST TRANSACTION STARTS:'AS HINT,@@TRANCOUNT AS TRANACTIONCOUNT
 SELECT TOP 3 *
 FROM CHOICES
 BEGIN TRAN
 SELECT 'THE SECOND TRANSACTION STARTS:'AS HINT,@@TRANCOUNT AS TRANACTIONCOUNT
 COMMIT TRAN
 SELECT 'THE SECOND TRANSACTION COMMITS'AS HINT,@@TRANCOUNT AS TRANACTIONCOUNT
 ROLLBACK TRAN
 SELECT 'THE FIRST TRANSACTION ROLLBACK'AS HINT,@@TRANCOUNT AS TRANACTIONCOUNT

 CREATE TRIGGER TDCOURSE
 ON COURSES
 FOR DELETE
 AS 
 DECLARE @INFO CHAR(255)
 SELECT @INFO='触发器中的事务数据为:'+ CONVERT(CHAR(2),@@TRANCOUNT)
 PRINT @INFO
 RETURN

 PRINT '删除操作以前触发器中的事务数为:'+CONVERT(CHAR(2),@@TRANCOUNT);
 DELETE 
 FROM COURSES
 WHERE CID='10052'
 PRINT '删除操作之后触发器中的事务数为:'+CONVERT(CHAR(2),@@TRANCOUNT);

 CREATE PROCEDURE INSERTCOURSEINFO
 @courseid char(10),
 @coursename varchar(30),
 @hour int,
 @returnString varchar(100)
 AS
 BEGIN TRAN
 IF EXISTS(SELECT CID
           FROM COURSES
           WHERE CID=@courseid)
    BEGIN
         SELECT @returnString='课程信息已存在'
         GOTO ONERROR
    END
  新增课程信息
 INSERT INTO COURSES 
 VALUES(@courseid,@coursename,@hour)
 IF @@ERROR<>0
    BEGIN
         SELECT @returnString='新增课程信息失败'
         GOTO ONERROR
    END
 SELECT @returnString='新增课程信息成功';
 COMMIT TRAN
  错误处理
 ONERROR:
    ROLLBACK TRAN;

 BEGIN TRAN tran_upd_courses
 UPDATE COURSES
 SET HOUR=60
 WHERE CID='10052';
 BEGIN TRAN tran_upd_teachers
 INSERT 
 INTO TEACHERS
 VALUES('123456789','Z','MY@ZS@ZS.EDU.CN',3000)
 IF @@ERROR!=0
 BEGIN
  撤销事务
 ROLLBACK TRAN tran_upd_teachers
 PRINT '更新教师表失败'
 RETURN
 END
  提交内层事务
 COMMIT TRAN tran_uuod_teachers
  提交外层事务
 COMMIT TRAN tran_upd_courses;

 SELECT *
 FROM TEACHERS;
 SELECT *
 FROM COURSES;

 BEGIN TRAN tran_upd_courses
 UPDATE COURSES
 SET HOUR=45
 WHERE CID='10052';
  设置事务保存点
 SAVE TRAN tran_upd_courses_done
 INSERT 
 INTO TEACHERS
 VALUES('12345','Z','MY@Z.EDU.CN',3000)
 IF @@ERROR!=0 OR @@ROWCOUNT>1
 BEGIN
  撤销事务
 ROLLBACK TRAN tran_upd_teachers_done
 PRINT '更新教师表信息失败'
 RETURN 
 END
 COMMIT TRAN tran_upd_course

SELECT *
FROM TEACHERS;
SELECT *
FROM COURSES;